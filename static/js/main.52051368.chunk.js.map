{"version":3,"sources":["img/arrowUp.svg","App.js","index.js"],"names":["App","useState","fxValue","setFxValue","equationValue","setEquationValue","selectValue","setSelectValue","selectRepValue","setSelectRepValue","useEffect","window","document","addEventListener","onScrollFunc","scrollHeight","scrollY","arrowIcon","querySelector","classList","add","remove","canNewtonMethod","event","calculateButton","className","placeholder","onChange","e","target","value","innerHTML","onChangeFxInput","onChangeEquationInput","name","id","onChangeRepInput","onChangeSelectInput","onClick","splitEquation","split","length","partOneResult","splice","join","splitPartTwo","partTwoResult","partThreeResult","i","parseInt","fx","parseFloat","concat","fxPrime","fxResult","newRow","createElement","textContent","x","toFixed","accuracy","prime","appendChild","onClickCalculateBtn","align","scrollTo","width","src","arrowUp","alt","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.52051368.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/arrowUp.00e9e366.svg\";","import React, {useState, useEffect} from 'react';\nimport arrowUp from './img/arrowUp.svg';\nimport \"./css/style.css\";\n\nfunction App() {\n  let [fxValue, setFxValue] = useState(\"\");\n  let [equationValue, setEquationValue] = useState(\"\");\n  let [selectValue, setSelectValue] = useState(5);\n  let [selectRepValue, setSelectRepValue] = useState(10);\n  \n  useEffect(() => {\n    window.document.addEventListener(\"scroll\",()=> onScrollFunc())\n  })\n\n  const onScrollFunc = () => {\n    const scrollHeight = window.scrollY;\n    const arrowIcon = document.querySelector(\".arrowUp\");\n\n    if(scrollHeight > 200){\n      arrowIcon.classList.add(\"arrowUp--show\")\n    }else{\n      arrowIcon.classList.remove(\"arrowUp--show\")\n    }\n  }\n\n  const canNewtonMethod = () => {\n    window.addEventListener('DOMContentLoaded', (event) => {\n      const calculateButton = document.querySelector(\".calculate\");\n      if(fxValue && equationValue){\n        calculateButton.classList.add(\"calculate--allow\");\n      }else{\n        calculateButton.classList.remove(\"calculate--allow\");\n      }\n  });\n\n  const calculateButton = document.querySelector(\".calculate\");\n  if(calculateButton){\n    if(fxValue && equationValue){\n      calculateButton.classList.add(\"calculate--allow\");\n    }else{\n      calculateButton.classList.remove(\"calculate--allow\");\n    }\n  }\n  }\n\n  const onChangeFxInput = (e) => {\n    setFxValue(e.target.value);\n    canNewtonMethod();\n    document.querySelector(\".tBody\").innerHTML = \"\";\n  }\n\n  const onChangeEquationInput = (e) => {\n    setEquationValue(e.target.value);\n    canNewtonMethod();\n    document.querySelector(\".tBody\").innerHTML = \"\";\n  }\n\n  const onChangeSelectInput = (e) => {\n    setSelectValue(e.target.value)\n    document.querySelector(\".tBody\").innerHTML = \"\";\n  }\n\n  const onChangeRepInput = (e) => {\n    setSelectRepValue(e.target.value)\n    document.querySelector(\".tBody\").innerHTML = \"\";\n  }\n\n  const onClickCalculateBtn = () =>{\n      const splitEquation = equationValue.split(\" \");\n\n      if(splitEquation.length !== 5){\n        return setEquationValue(\"Wrong equation value\");\n      };\n\n      const splitPartOne = splitEquation[0].split(\"\");\n      const partOneResult = splitPartOne.splice(2).join(\"\");\n  \n      const splitPartTwo = splitEquation[2].split(\"\");\n      const partTwoResult = splitPartTwo.splice(0, splitPartTwo.length -1).join(\"\");\n  \n      const partThreeResult = splitEquation[4];\n  \n      for(let i = 1; i < parseInt(selectRepValue) + 1; i++){\n      const fx = parseFloat(fxValue ** partOneResult) + (parseFloat(splitEquation[1].concat(partTwoResult)) * fxValue)  + parseFloat(splitEquation[3].concat(partThreeResult));\n      const fxPrime = partOneResult * fxValue ** (partOneResult - 1) - partTwoResult;\n      const fxResult = fxValue - (fx / fxPrime);\n\n\n      //Create new row with result\n      if(fxValue !== fxResult){\n        const newRow = document.createElement(\"tr\");\n        newRow.classList.add(\"newRow\");\n\n        const id = document.createElement(\"td\");\n        id.textContent = i + \".\";\n\n        const x = document.createElement(\"td\");\n        x.textContent = fxResult.toFixed(selectValue);\n\n        const accuracy = document.createElement(\"td\");\n        accuracy.textContent = fxResult.toFixed(selectValue);\n\n        const prime = document.createElement(\"td\");\n        prime.textContent = fx;\n\n\n        document.querySelector(\".tBody\").appendChild(newRow);\n        newRow.appendChild(id);\n        newRow.appendChild(x);\n        newRow.appendChild(accuracy);\n        newRow.appendChild(prime);\n\n        fxValue = fxResult;\n      }else{\n        return\n      }\n\n    }\n  }\n\n  const onClickScrollToTop = () => {\n    window.scrollTo(0, 0);\n  }\n\n//x^9 - 41x - 71\n  canNewtonMethod();\n\n  return (\n    <div className=\"App\">\n        <h1 className=\"title\">Newton Raphson Method</h1>\n\n        <div className=\"newton\">\n          <input className='fx' placeholder=\"x0\" onChange={(e)=> onChangeFxInput(e)} value={fxValue}/>\n          <input className='equation' placeholder=\"Equation e.g x^5 - 10 - 17\" onChange={(e)=> onChangeEquationInput(e)} value={equationValue}/>\n\n          <select name=\"rest\" id=\"rest\" onChange={(e)=> onChangeRepInput(e)}>\n            <option value=\"10\">max 10 rep</option>\n            <option value=\"20\">max 20 rep</option>\n            <option value=\"50\">max 50 rep</option>\n            <option value=\"100\">max 100 rep</option>\n            <option value=\"200\">max 200 rep</option>\n            <option value=\"500\">max 500 rep</option>\n          </select>\n\n          <select name=\"rest\" id=\"rest\" onChange={(e)=> onChangeSelectInput(e)}>\n            <option value=\"5\">5 digit</option>\n            <option value=\"10\">10 digit</option>\n            <option value=\"15\">15 digit</option>\n            <option value=\"20\">20 digit</option>\n            <option value=\"20\">25 digit</option>\n            <option value=\"20\">30 digit</option>\n          </select>\n\n          <button className=\"calculate\" onClick={()=>onClickCalculateBtn()}>Calculate</button>\n\n          <div className=\"resultWrapper\">\n            <table className=\"result\">\n              <thead>\n                <tr>\n                  <th>n</th>\n                  <th>x</th>\n                  <th>Accuracy(x)</th>\n                  <th>f(x)</th>\n                </tr>\n              </thead>\n              <tbody className=\"tBody\" align=\"center\">\n              </tbody>\n\n            </table>\n          </div>\n        </div>\n      \n      {/* FIXED ELEMENTS */}\n      <div className=\"arrowUp\" onClick={()=>onClickScrollToTop()}><img width=\"20\" src={arrowUp} alt=\"arrowIcon\"></img></div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}